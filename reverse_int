int digits_count(int x)
{
    int base =1;
    x=x/10;
    while (x)
    {
        x=x/10;
        base = base * 10;
    }
    return base;
}
int reverse(int x) 
{
    int shift = 0;
    int base = digits_count(x);
    int res =0;
    int count = 0;
       
    while(x)
    {
        int rem = x%10;
       switch(count)
        {
        
        case(0):
        if ((base == 1000000000)&&(abs(rem)>2))
        return 0;
        if ((base == 1000000000)&&(abs(rem)<2))
        count =10;
        break;
        case(1):
        if ((base == 100000000)&&(abs(rem)>1))
        return 0;
        if ((base == 100000000)&&(abs(rem)<1))
        count =10;
        break;
        case (2):
        if ((base == 10000000)&&(abs(rem)>4))
        return 0;
        else if ((base == 10000000)&&(abs(rem)<4))
        count =10;
        break;
        case (3):
        if ((base == 1000000)&&(abs(rem)>7))
        return 0;
        else if ((base == 1000000)&&(abs(rem)<7))
        count =10;
        break;
        case (4):
        if ((base == 100000)&&(abs(rem)<4))
        count =10;
        else if ((base == 100000)&&(abs(rem)>4))
        return 0;
        break;
        case (5):
        if ((base == 10000)&&(abs(rem)<8))
        count =10;
        else if ((base == 10000)&&(abs(rem)>8))
        return 0;
        break;
        case (6):
        if ((base == 1000)&&(abs(rem)<3))
        count =10;
        else if ((base == 1000)&&(abs(rem)>3))
        return 0;
        break;
        case (7):
        if ((base == 100)&&(abs(rem)<6))
        count =10;
        else if ((base == 100)&&(abs(rem)>6))
        return 0;
        break;
        case (8):
        if ((base == 10)&&(abs(rem)<4))
        count =10;
        else if ((base == 10)&&(abs(rem)>4))
        return 0;
        break;
        case (9):
        if ((base == 1)&&(abs(rem)<8))
        count =10;
        else if ((base == 1)&&(abs(rem)>8))
        return 0;
        break;
        }
        x=x/10;
        
        res = res+rem*base;
       
        base = base/10;
        count++;
    }
    return res;
}
